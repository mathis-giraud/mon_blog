{
  "hash": "c7413bcb2564ab2854e455c7e14fde8c",
  "result": {
    "markdown": "---\ntitle: \"Code R\"\nauthor: \"Mathis GIRAUD\"\ndate: \"2023-02-21\"\n---\n\n\n# 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"quarto\",dependencies = TRUE)\n# install.packages(\"targets\",dependencies = TRUE)\n# install.packages(\"remotes\",dependencies = TRUE)\n```\n:::\n\n\n## Librairie heron\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"https://github.com/r-lib/remotes.git\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSkipping install of 'remotes' from a github remote, the SHA1 (1e121409) has not changed since last install.\n  Use `force = TRUE` to force installation\n```\n:::\n:::\n\n\n\n## Question 6\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"https://github.com/mathis-giraud/heron.git\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSkipping install of 'heron' from a github remote, the SHA1 (4b725649) has not changed since last install.\n  Use `force = TRUE` to force installation\n```\n:::\n:::\n\n\n\n## Question 7\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'targets' a été compilé avec la version R 4.2.2\n```\n:::\n\n```{.r .cell-code}\n# tar_script(\"_targets.R\")\n```\n:::\n\n\n\n## Question 11\n\n# Je n'ai pas réussi cette partie, R ne reconnait pas le fichier _targets.R ni le dossier _targets\n# Je pensais que cela venait de mes tar_target mais ils fonctionnent\n# J'ai néanmoins uniformisé le code avec lintr\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exécution des tar_targets\n# tar_make()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# tar_script(\"_targets.R\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# tar_edit(\"_targets.R\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# tar_read(\"_targets.R\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# tar_make()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"devtools\", dependencies = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# devtools::install_github(\"r-lib/lintr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# lintr::use_lintr(type = \"tidyverse\")\nusethis::use_github_action(\"lint-project\")\nlintr::lint_dir()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfonctions.R:39:14: warning: [seq_linter] 1:length(...) is likely to be wrong in the empty edge case. Use seq_along(...) instead.\n  for (i in (1:length(liste_triangle))) {\n             ^~~~~~~~~~~~~~~~~~~~~~~~\nfonctions.R:62:14: warning: [seq_linter] 1:length(...) is likely to be wrong in the empty edge case. Use seq_along(...) instead.\n  for (i in (1:length(liste_triangle))) {\n             ^~~~~~~~~~~~~~~~~~~~~~~~\nfonctions.R:79:14: warning: [seq_linter] 1:length(...) is likely to be wrong in the empty edge case. Use seq_along(...) instead.\n  for (i in (1:length(liste_triangle))) {\n             ^~~~~~~~~~~~~~~~~~~~~~~~\nfonctions.R:103:21: warning: [vector_logic_linter] Conditional expressions require scalar logical operators (&& and ||)\n  if (is.numeric(a) & is.numeric(b) & is.numeric(c)) {\n                    ^\nfonctions.R:103:37: warning: [vector_logic_linter] Conditional expressions require scalar logical operators (&& and ||)\n  if (is.numeric(a) & is.numeric(b) & is.numeric(c)) {\n                                    ^\nfonctions.R:104:16: warning: [vector_logic_linter] Conditional expressions require scalar logical operators (&& and ||)\n    if (a <= 0 | b <= 0 | c <= 0) {\n               ^\nfonctions.R:104:25: warning: [vector_logic_linter] Conditional expressions require scalar logical operators (&& and ||)\n    if (a <= 0 | b <= 0 | c <= 0) {\n                        ^\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"styler\",dependencies = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}